// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingService.Dal.Contexts;

#nullable disable

namespace WeddingService.Dal.Migrations
{
    [DbContext(typeof(WeddingServiceContext))]
    [Migration("20221212214953_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BaseServiceEntityOrder", b =>
                {
                    b.Property<long>("OrdersId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServicesId")
                        .HasColumnType("bigint");

                    b.HasKey("OrdersId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("BaseServiceEntityOrder");
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Base.BaseServiceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BaseService");
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Car", b =>
                {
                    b.HasBaseType("WeddingService.Dal.Entities.Base.BaseServiceEntity");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Ceremony", b =>
                {
                    b.HasBaseType("WeddingService.Dal.Entities.Base.BaseServiceEntity");

                    b.ToTable("Ceremonies");
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Cloth", b =>
                {
                    b.HasBaseType("WeddingService.Dal.Entities.Base.BaseServiceEntity");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("BaseServiceEntityOrder", b =>
                {
                    b.HasOne("WeddingService.Dal.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingService.Dal.Entities.Base.BaseServiceEntity", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Car", b =>
                {
                    b.HasOne("WeddingService.Dal.Entities.Base.BaseServiceEntity", null)
                        .WithOne()
                        .HasForeignKey("WeddingService.Dal.Entities.Car", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Ceremony", b =>
                {
                    b.HasOne("WeddingService.Dal.Entities.Base.BaseServiceEntity", null)
                        .WithOne()
                        .HasForeignKey("WeddingService.Dal.Entities.Ceremony", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeddingService.Dal.Entities.Cloth", b =>
                {
                    b.HasOne("WeddingService.Dal.Entities.Base.BaseServiceEntity", null)
                        .WithOne()
                        .HasForeignKey("WeddingService.Dal.Entities.Cloth", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
